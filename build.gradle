plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.openapi.generator' version '7.0.0'
}

group = 'com.samsung'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    compileOnly 'jakarta.validation:jakarta.validation-api:2.0.2'
//    implementation 'jakarta.validation:validation-api:2.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.0.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    testImplementation 'org.assertj:assertj-core:3.24.2'

    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

    // Database (JDBC & H2)
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    runtimeOnly 'com.h2database:h2:2.1.210'

    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.2.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

openApiGenerate {
    generatorName = 'spring'
    inputSpec = "$rootDir/design/api-spec.yaml".toString()
//    outputDir = "$rootDir".toString()
    outputDir = "$buildDir/generated/openapi"
    apiPackage = 'com.samsung.sds.emarket.marketing.api'
    invokerPackage = 'com.samsung.sds.emarket.marketing.api.invoker'
    modelPackage = 'com.samsung.sds.emarket.marketing.api.model'
    configOptions = [
            dateLibrary: 'java8',
            java8: "false",
            generateSupportFiles: "false",
            hideGenerationTimestamp: "true",
            useTags: "true",
            interfaceOnly: "true",
            openApiNullable: "false"
    ]
}

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/openapi/src/main/java"
        }
    }
}

sourceSets {
    test {
        java {
            srcDir "$buildDir/generated/openapi/src/test/java"
        }
    }
}

sourceSets {
    main {
        resources {
            srcDir "$buildDir/generated/openapi/src/main/resources"  // Specify your custom resources directory
        }
    }
//    test {
//        resources {
//            srcDir 'path/to/your/test/resources'  // Specify custom test resources directory
//        }
//    }
}


